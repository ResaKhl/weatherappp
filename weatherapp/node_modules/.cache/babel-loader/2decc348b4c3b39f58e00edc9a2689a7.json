{"ast":null,"code":"var _jsxFileName = \"/home/rk/WebstormProjects/WeatherAPPP/weatherapp/src/WeatherComponents/Hourly.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Chart } from 'chart.js';\n\nfunction Hourly(props) {\n  const reftocanvas = React.createRef();\n  useEffect(() => {\n    const can = reftocanvas.current;\n    const ctx = can.getConte;\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.weatherinfo.currently.humidity, \"humid\", React.createElement(\"canvas\", {\n    id: \"myChart\",\n    width: \"800\",\n    height: \"800\",\n    \"aria-label\": \"Hello ARIA World\",\n    ref: this.reftocanvas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Hello Fallback World\")));\n}\n\nexport default Hourly;","map":{"version":3,"sources":["/home/rk/WebstormProjects/WeatherAPPP/weatherapp/src/WeatherComponents/Hourly.js"],"names":["React","useState","useEffect","Chart","Hourly","props","reftocanvas","createRef","can","current","ctx","getConte","weatherinfo","currently","humidity"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,KAAR,QAAoB,UAApB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAClB,QAAMC,WAAW,GAAGN,KAAK,CAACO,SAAN,EAApB;AACAL,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMM,GAAG,GAAGF,WAAW,CAACG,OAAxB;AACA,UAAMC,GAAG,GAAGF,GAAG,CAACG,QAAhB;AACH,GAHQ,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMN,KAAK,CAACO,WAAN,CAAkBC,SAAlB,CAA4BC,QAAlC,WACA;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAiC,IAAA,MAAM,EAAC,KAAxC;AAA8C,kBAAW,kBAAzD;AAA4E,IAAA,GAAG,EAAE,KAAKR,WAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAnG,CADA,CADJ;AAKH;;AAED,eAAeF,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Chart} from 'chart.js';\n\nfunction Hourly(props){\n    const reftocanvas = React.createRef();\n    useEffect(()=>{\n        const can = reftocanvas.current;\n        const ctx = can.getConte\n    });\n    return(\n        <div>{props.weatherinfo.currently.humidity}humid\n        <canvas id=\"myChart\" width=\"800\" height=\"800\" aria-label=\"Hello ARIA World\" ref={this.reftocanvas}><p>Hello Fallback World</p></canvas>\n        </div>\n    );\n}\n\nexport default Hourly"]},"metadata":{},"sourceType":"module"}