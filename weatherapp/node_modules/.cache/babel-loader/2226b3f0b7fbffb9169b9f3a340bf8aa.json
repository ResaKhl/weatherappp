{"ast":null,"code":"var _jsxFileName = \"/home/rk/WebstormProjects/weatherapp/weatherapp/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Posts from \"./WeatherComponents/Posts\";\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      street: 'Shoup Ave',\n      city: 'Los Angeles',\n      lat: '',\n      long: '',\n      states: ['Select', 'Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Federated States of Micronesia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'],\n      currState: 'Select',\n      currLoc: false,\n      users: [],\n      loadingcustomers: true,\n      customers: [],\n      fetchedweather: false,\n      weatherstates: {}\n    };\n    this.updateStreet = this.updateStreet.bind(this);\n    this.updateCity = this.updateCity.bind(this);\n    this.updateStates = this.updateStates.bind(this);\n    this.updateCurrloc = this.updateCurrloc.bind(this);\n    this.updateClear = this.updateClear.bind(this);\n    this.submitform = this.submitform.bind(this);\n    this.updatelatlong = this.updatelatlong.bind(this);\n    this.submitPostlatlong = this.submitPostlatlong.bind(this);\n  }\n\n  updateStreet(e) {\n    e.preventDefault();\n    this.setState({\n      street: e.target.value\n    });\n  }\n\n  updateCity(e) {\n    e.preventDefault();\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  updateStates(e) {\n    e.preventDefault();\n    this.setState({\n      currState: e.target.value\n    });\n  }\n\n  updateCurrloc(e) {\n    e.preventDefault();\n    this.setState({\n      currLoc: !this.state.currLoc\n    });\n  }\n\n  updateClear(e) {\n    e.preventDefault();\n    this.setState({\n      street: 'Shoup Ave',\n      city: 'Los Angeles',\n      currState: 'Select',\n      currLoc: false\n    });\n  }\n\n  updatelatlong(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(res => res.json()).then(data => {\n      this.setState({\n        users: data\n      });\n    }).catch(console.log);\n  }\n\n  submitform(e) {\n    e.preventDefault();\n    fetch('http://localhost:5000/api/customers').then(res => res.json()).then(data => {\n      this.setState({\n        customers: data,\n        loadingcustomers: false\n      });\n      console.log(data);\n    });\n  }\n\n  submitPostlatlong(e) {\n    e.preventDefault();\n    const uri = `http://localhost:5000/weather/lat/${this.state.lat}/long/${this.state.long}`;\n    fetch(uri).then(res => res.json()).then(data => {\n      this.setState({\n        fetchedweather: true,\n        weatherstates: data\n      });\n      console.log(data);\n    });\n  }\n\n  render() {\n    let testStyle = {\n      'marginTop': '50px'\n    };\n    const rendercustomer = this.state.loadingcustomers;\n    const weatherstates = this.state.weatherstates;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }) // <div className=\"App\">\n    //   <form className='weatherform'>\n    //     <h1>Weather Search</h1>\n    //     <div id='street' className='inputpart'>\n    //     <label className='inputlabel'>street</label>\n    //     <input onChange={this.updateStreet} value={this.state.street}> </input>\n    //     </div>\n    //     <div id='city' className='inputpart'>\n    //     <label className='inputlabel'>city</label>\n    //     <input onChange={this.updateCity} value={this.state.city}></input>\n    //     </div>\n    //     <div className='inputpart'>\n    //     <label className='inputlabel'>state</label>\n    //     <select className='state-select' onChange={this.updateStates} value={this.state.currState}>\n    //       {this.state.states.map((st, id)=><option value={st} key={id}>{st}</option>)}\n    //     </select>\n    //     </div>\n    //     <div className='inputpart'>\n    //     <label className='current-Location'>\n    //     <input name='currentLocation' type='checkbox' onChange={this.state.updateCurrloc} \n    //     value={this.state.currLoc}>\n    //     </input>\n    //     current-Location\n    //     </label>\n    //     </div>\n    //     <div id='city' className='inputpart'>\n    //     <label className='inputlabel'>lat</label>\n    //     <input onChange={this.updatelatlong} value={this.state.lat} name='lat'></input>\n    //     </div><div id='city' className='inputpart'>\n    //     <label className='inputlabel'>long</label>\n    //     <input onChange={this.updatelatlong} value={this.state.long} name='long'></input>\n    //     </div>\n    //     <input type='submit' className='submitbutton' value='Submitlatlong' onClick={this.submitPostlatlong} />\n    //     <input type='submit' className='submitbutton' id='submit' value='Submit' onClick={this.submitform} />\n    //     <input type='submit' className='submitbutton' id ='clear' value='clear' onClick={this.updateClear}/>\n    //   </form>\n    //   <div className='userspart'>\n    //     <table>\n    //       <tbody>\n    //         {this.state.users.map((user, id)=><TableRow user={user} key={id}></TableRow>)}\n    //       </tbody>\n    //     </table>\n    //   </div>\n    //   <div className='userspart' id='customers'>\n    //   {rendercustomer ? <h3>is loading...</h3>:\n    //   <table>\n    //   <tbody>\n    //     {this.state.customers.map((cust, id)=><CustBlock user={cust}></CustBlock>)}\n    //   </tbody>\n    //   </table> \n    //   }\n    //   </div>\n    //   <div className='userspart' id='customers'>\n    //   {!this.state.fetchedweather ? <h3>is loading weather status...</h3> :\n    //   <table>\n    //   <tbody>\n    //     {/* {this.state.weatherstates.map((cust, id)=><CustBlock user={cust}></CustBlock>)} */}\n    //     <p>{this.state.weatherstates.currently.apparentTemperature}</p>\n    //   </tbody>\n    //   </table> \n    //   }\n    //   </div>\n    //   <div className='userspart'>\n    //       <h1>posts</h1>\n    //       <Posts/>\n    //   </div>\n    //   <div>\n    //     <h1 style={testStyle}>Test</h1>\n    //     <h5>street value is:</h5>{this.state.street}\n    //     <h5>city value is:</h5>{this.state.city}\n    //     <h5>currState value is:</h5>{this.state.currState}\n    //   </div>\n    // </div>\n    ;\n  }\n\n}\n\nconst TableRow = props => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, props.user.id), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, props.user.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, props.user.email), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"`\", props.user.address.street, \" \", props.user.address.suit, \" \", props.user.address.city, \" \", props.user.address.zipcode, \"` \"));\n};\n\nconst CustBlock = props => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, props.user.id), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, props.user.firstName), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, props.user.lastName));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/rk/WebstormProjects/weatherapp/weatherapp/src/App.js"],"names":["React","Component","ReactDom","Posts","Home","constructor","props","state","street","city","lat","long","states","currState","currLoc","users","loadingcustomers","customers","fetchedweather","weatherstates","updateStreet","bind","updateCity","updateStates","updateCurrloc","updateClear","submitform","updatelatlong","submitPostlatlong","e","preventDefault","setState","target","value","type","checked","name","componentDidMount","fetch","then","res","json","data","catch","console","log","uri","render","testStyle","rendercustomer","TableRow","user","id","email","address","suit","zipcode","CustBlock","firstName","lastName"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport ReactDom from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Posts from \"./WeatherComponents/Posts\";\n\nexport class Home extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      street:'Shoup Ave',\n      city:'Los Angeles',\n      lat:'',\n      long:'',\n      states:['Select','Alabama','Alaska','American Samoa','Arizona','Arkansas',\n      'California','Colorado','Connecticut','Delaware','District of Columbia',\n      'Federated States of Micronesia','Florida','Georgia','Guam','Hawaii',\n      'Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine',\n      'Marshall Islands','Maryland','Massachusetts','Michigan','Minnesota',\n      'Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire',\n      'New Jersey','New Mexico','New York','North Carolina','North Dakota',\n      'Northern Mariana Islands','Ohio','Oklahoma','Oregon','Palau','Pennsylvania',\n      'Puerto Rico','Rhode Island','South Carolina','South Dakota','Tennessee','Texas',\n      'Utah','Vermont','Virgin Island','Virginia','Washington','West Virginia','Wisconsin',\n      'Wyoming'],\n      currState : 'Select',\n      currLoc: false,\n      users:[],\n      loadingcustomers: true,\n      customers : [],\n      fetchedweather : false,\n      weatherstates : {},\n    }\n    this.updateStreet = this.updateStreet.bind(this);\n    this.updateCity = this.updateCity.bind(this);\n    this.updateStates = this.updateStates.bind(this);\n    this.updateCurrloc = this.updateCurrloc.bind(this);\n    this.updateClear = this.updateClear.bind(this);\n    this.submitform = this.submitform.bind(this);\n    this.updatelatlong = this.updatelatlong.bind(this);\n    this.submitPostlatlong = this.submitPostlatlong.bind(this);\n  }\n\n  updateStreet(e){\n    e.preventDefault();\n    this.setState({street:e.target.value});\n  }\n  updateCity(e){\n    e.preventDefault();\n    this.setState({city:e.target.value});\n  }\n  updateStates(e){\n    e.preventDefault();\n    this.setState({currState:e.target.value});\n  }\n  updateCurrloc(e){\n    e.preventDefault();\n    this.setState({currLoc:!this.state.currLoc});\n  }\n  updateClear(e){\n    e.preventDefault();\n    this.setState({\n      street:'Shoup Ave',\n      city:'Los Angeles',\n      currState : 'Select',\n      currLoc: false,\n  })\n  }\n  updatelatlong(e){\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState ({\n      [name] : value,\n    })\n  }\n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n      .then(res=>res.json())\n      .then((data)=>{\n        this.setState({users:data})\n      })\n      .catch(console.log)\n  }\n  submitform(e){\n    e.preventDefault();\n    fetch('http://localhost:5000/api/customers')\n      .then(res=>res.json())\n      .then((data)=>{\n        this.setState({\n          customers:data, \n          loadingcustomers:false\n        })\n        console.log(data);\n      })\n  }\n  submitPostlatlong(e){\n    e.preventDefault();\n    const uri = `http://localhost:5000/weather/lat/${this.state.lat}/long/${this.state.long}`\n    fetch(uri).then(res=>res.json())\n      .then((data)=>\n      { this.setState({\n        fetchedweather : true,\n        weatherstates:data});\n        console.log(data);\n      }\n    )\n  }\n  \n  render(){\n    let testStyle = {\n      'marginTop':'50px',\n    }\n    const rendercustomer = this.state.loadingcustomers;\n    const weatherstates = this.state.weatherstates;\n    return (\n      <div></div>\n      // <div className=\"App\">\n      //   <form className='weatherform'>\n      //     <h1>Weather Search</h1>\n      //     <div id='street' className='inputpart'>\n      //     <label className='inputlabel'>street</label>\n      //     <input onChange={this.updateStreet} value={this.state.street}> </input>\n      //     </div>\n      //     <div id='city' className='inputpart'>\n      //     <label className='inputlabel'>city</label>\n      //     <input onChange={this.updateCity} value={this.state.city}></input>\n      //     </div>\n      //     <div className='inputpart'>\n      //     <label className='inputlabel'>state</label>\n      //     <select className='state-select' onChange={this.updateStates} value={this.state.currState}>\n      //       {this.state.states.map((st, id)=><option value={st} key={id}>{st}</option>)}\n      //     </select>\n      //     </div>\n      //     <div className='inputpart'>\n      //     <label className='current-Location'>\n      //     <input name='currentLocation' type='checkbox' onChange={this.state.updateCurrloc} \n      //     value={this.state.currLoc}>\n      //     </input>\n      //     current-Location\n      //     </label>\n      //     </div>\n\n      //     <div id='city' className='inputpart'>\n      //     <label className='inputlabel'>lat</label>\n      //     <input onChange={this.updatelatlong} value={this.state.lat} name='lat'></input>\n      //     </div><div id='city' className='inputpart'>\n      //     <label className='inputlabel'>long</label>\n      //     <input onChange={this.updatelatlong} value={this.state.long} name='long'></input>\n      //     </div>\n      //     <input type='submit' className='submitbutton' value='Submitlatlong' onClick={this.submitPostlatlong} />\n\n      //     <input type='submit' className='submitbutton' id='submit' value='Submit' onClick={this.submitform} />\n      //     <input type='submit' className='submitbutton' id ='clear' value='clear' onClick={this.updateClear}/>\n      //   </form>\n      //   <div className='userspart'>\n      //     <table>\n      //       <tbody>\n      //         {this.state.users.map((user, id)=><TableRow user={user} key={id}></TableRow>)}\n      //       </tbody>\n      //     </table>\n      //   </div>\n      //   <div className='userspart' id='customers'>\n      //   {rendercustomer ? <h3>is loading...</h3>:\n      //   <table>\n      //   <tbody>\n      //     {this.state.customers.map((cust, id)=><CustBlock user={cust}></CustBlock>)}\n      //   </tbody>\n      //   </table> \n      //   }\n      //   </div>\n      //   <div className='userspart' id='customers'>\n      //   {!this.state.fetchedweather ? <h3>is loading weather status...</h3> :\n      //   <table>\n      //   <tbody>\n      //     {/* {this.state.weatherstates.map((cust, id)=><CustBlock user={cust}></CustBlock>)} */}\n      //     <p>{this.state.weatherstates.currently.apparentTemperature}</p>\n      //   </tbody>\n      //   </table> \n      //   }\n      //   </div>\n      //   <div className='userspart'>\n      //       <h1>posts</h1>\n      //       <Posts/>\n      //   </div>\n      //   <div>\n      //     <h1 style={testStyle}>Test</h1>\n      //     <h5>street value is:</h5>{this.state.street}\n      //     <h5>city value is:</h5>{this.state.city}\n      //     <h5>currState value is:</h5>{this.state.currState}\n      //   </div>\n        \n      // </div>\n    );\n  }\n}\n\n\n\nconst TableRow = (props)=> {\n  return <tr>\n    <td>{props.user.id}</td>\n    <td>{props.user.name}</td>\n    <td>{props.user.email}</td>\n    <td>`{props.user.address.street} {props.user.address.suit} {props.user.address.city} {props.user.address.zipcode}` </td>\n  </tr>;\n}\n\nconst CustBlock = (props) => {\n  return <tr>\n    <td>{props.user.id}</td>\n    <td>{props.user.firstName}</td>\n    <td>{props.user.lastName}</td>\n  </tr>;\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}