{"ast":null,"code":"var _jsxFileName = \"/home/rk/WebstormProjects/weatherapp/weatherapp/src/WeatherComponents/posts.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './../App.css';\n\nclass MyComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      posts: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(posts => {\n      this.setState({\n        isLoaded: true,\n        posts\n      });\n    });\n  }\n\n  showPost() {}\n\n  render() {\n    const _this$state = this.state,\n          posts = _this$state.posts,\n          isLoaded = _this$state.isLoaded;\n    console.log('**********');\n    console.log(posts);\n    console.log('**********');\n    const tablestyle = {\n      border: '1px solid black'\n    }; // return <div></div>;\n\n    return !isLoaded ? React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"IS LOADING...\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: tablestyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"index\"), React.createElement(\"td\", {\n      id: \"posttile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"title\"), React.createElement(\"td\", {\n      id: \"postbody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"body\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, posts.map((post, i) => React.createElement(TableRow, {\n      key: i,\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst TableRow = props => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/post\",\n    onClick: props.showPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.post.id)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.post.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.post.body));\n};\n\nexport default MyComponent;","map":{"version":3,"sources":["/home/rk/WebstormProjects/weatherapp/weatherapp/src/WeatherComponents/posts.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","MyComponent","constructor","props","state","isLoaded","posts","componentDidMount","fetch","then","res","json","setState","showPost","render","console","log","tablestyle","border","map","post","i","TableRow","id","title","body"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,QAKS,kBALT;AAMA,OAAO,cAAP;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAmC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC,KADA;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADf,EAEKF,IAFL,CAEUH,KAAK,IAAE;AAAC,WAAKM,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAAC,IAAV;AAAeC,QAAAA;AAAf,OAAd;AAAqC,KAFvD;AAGH;;AACDO,EAAAA,QAAQ,GAAE,CAET;;AACDC,EAAAA,MAAM,GAAE;AAAA,wBACsB,KAAKV,KAD3B;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUD,QADV,eACUA,QADV;AAEJU,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAMC,UAAU,GAAG;AACfC,MAAAA,MAAM,EAAC;AADQ,KAAnB,CALI,CAQJ;;AACA,WAAO,CAACb,QAAD,GAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAb,GAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAEY,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAJ,EAAkB;AAAI,MAAA,EAAE,EAAC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlB,EAA8C;AAAI,MAAA,EAAE,EAAC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA9C,CAAJ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKX,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAW,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,IAAI,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CADL,CAFJ,CADJ,CAFJ;AAWH;;AApC8B;;AAuCnC,MAAME,QAAQ,GAAInB,KAAD,IAAU;AACvB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAiB,IAAA,OAAO,EAAEA,KAAK,CAACU,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CV,KAAK,CAACiB,IAAN,CAAWG,EAAtD,CAAJ,CADK,EAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKpB,KAAK,CAACiB,IAAN,CAAWI,KAAhB,CAFK,EAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKrB,KAAK,CAACiB,IAAN,CAAWK,IAAhB,CAHK,CAAP;AAKD,CANH;;AAQA,eAAexB,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport './../App.css';\n\nclass MyComponent extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoaded:false,\n            posts: null,\n        };\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/posts')\n            .then(res=>res.json())\n            .then(posts=>{this.setState({isLoaded:true,posts})});\n    }\n    showPost(){\n        \n    }\n    render(){\n        const {posts, isLoaded} = this.state;\n        console.log('**********');\n        console.log(posts)\n        console.log('**********');\n        const tablestyle = {\n            border:'1px solid black',\n        };\n        // return <div></div>;\n        return !isLoaded ? (<h6>IS LOADING...</h6>):\n         (\n            <div>\n                <table style={tablestyle}>\n                    <tr><th><td>index</td><td id='posttile'>title</td><td id='postbody'>body</td></th></tr>\n                    <tr>\n                        {posts.map((post, i)=><TableRow key={i} post={post}></TableRow>)}\n                    </tr>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst TableRow = (props)=> {\n    return <tr>\n      <td><Link to='/post' onClick={props.showPost}>{props.post.id}</Link></td>\n      <td>{props.post.title}</td>\n      <td>{props.post.body}</td>\n    </tr>;\n  }\n\nexport default MyComponent;"]},"metadata":{},"sourceType":"module"}