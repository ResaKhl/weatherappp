{"ast":null,"code":"var _jsxFileName = \"/home/rk/WebstormProjects/weatherapp/weatherapp/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      street: 'Shoup Ave',\n      city: 'Los Angeles',\n      lat: '',\n      long: '',\n      states: ['Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Federated States of Micronesia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'],\n      currState: 'Select',\n      currLoc: false,\n      users: [],\n      loadingcustomers: true,\n      customers: []\n    };\n    this.updateStreet = this.updateStreet.bind(this);\n    this.updateCity = this.updateCity.bind(this);\n    this.updateStates = this.updateStates.bind(this);\n    this.updateCurrloc = this.updateCurrloc.bind(this);\n    this.updateClear = this.updateClear.bind(this);\n    this.submitform = this.submitform.bind(this);\n    this.updatelatlong = this.updatelatlong.bind(this);\n    this.submitPostlatlong = this.submitPostlatlong.bind(this);\n  }\n\n  updateStreet(e) {\n    e.preventDefault();\n    this.setState({\n      street: e.target.value\n    });\n  }\n\n  updateCity(e) {\n    e.preventDefault();\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  updateStates(e) {\n    e.preventDefault();\n    this.setState({\n      currState: e.target.value\n    });\n  }\n\n  updateCurrloc(e) {\n    e.preventDefault();\n    this.setState({\n      currLoc: !this.state.currLoc\n    });\n  }\n\n  updateClear(e) {\n    e.preventDefault();\n    this.setState({\n      street: 'Shoup Ave',\n      city: 'Los Angeles',\n      currState: 'Select',\n      currLoc: false\n    });\n  }\n\n  updatelatlong(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(res => res.json()).then(data => {\n      this.setState({\n        users: data\n      });\n    }).catch(console.log);\n  }\n\n  submitform(e) {\n    e.preventDefault();\n    fetch('http://localhost:5000/api/customers').then(res => res.json()).then(data => {\n      this.setState({\n        customers: data,\n        loadingcustomers: false\n      });\n      console.log(data);\n    });\n  }\n\n  submitPostlatlong(e) {\n    e.preventDefault();\n    const uri = `http://localhost:5000/weather/lat/${this.state.lat}/long/${this.state.long}`;\n    fetch(uri).then(res => res.json()).then(data => console.log(data));\n  }\n\n  render() {\n    let testStyle = {\n      'marginTop': '50px'\n    };\n    const rendercustomer = this.state.loadingcustomers;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"weatherform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Weather Search\"), React.createElement(\"div\", {\n      id: \"street\",\n      className: \"inputpart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"street\"), React.createElement(\"input\", {\n      onChange: this.updateStreet,\n      value: this.state.street,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"city\",\n      className: \"inputpart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"city\"), React.createElement(\"input\", {\n      onChange: this.updateCity,\n      value: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"inputpart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"state\"), React.createElement(\"select\", {\n      className: \"state-select\",\n      onChange: this.updateStates,\n      value: this.state.currState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.states.map((st, id) => React.createElement(\"option\", {\n      value: st,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, st)))), React.createElement(\"div\", {\n      className: \"inputpart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"current-Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"currentLocation\",\n      type: \"checkbox\",\n      onChange: this.state.updateCurrloc,\n      value: this.state.currLoc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), \"current-Location\")), React.createElement(\"div\", {\n      id: \"city\",\n      className: \"inputpart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"lat\"), React.createElement(\"input\", {\n      onChange: this.updatelatlong,\n      value: this.state.lat,\n      name: \"lat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"city\",\n      className: \"inputpart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"long\"), React.createElement(\"input\", {\n      onChange: this.updatelatlong,\n      value: this.state.long,\n      name: \"long\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"submitbutton\",\n      value: \"Submitlatlong\",\n      onClick: this.submitPostlatlong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"submitbutton\",\n      id: \"submit\",\n      value: \"Submit\",\n      onClick: this.submitform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"submitbutton\",\n      id: \"clear\",\n      value: \"clear\",\n      onClick: this.updateClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"userspart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.users.map((user, id) => React.createElement(TableRow, {\n      user: user,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"userspart\",\n      id: \"customers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, rendercustomer ? React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"is loading...\") : React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.state.customers.map((cust, id) => React.createElement(CustBlock, {\n      user: cust,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: testStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Test\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"street value is:\"), this.state.street, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"city value is:\"), this.state.city, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"currState value is:\"), this.state.currState));\n  }\n\n}\n\nconst TableRow = props => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, props.user.id), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, props.user.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, props.user.email), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"`\", props.user.address.street, \" \", props.user.address.suit, \" \", props.user.address.city, \" \", props.user.address.zipcode, \"` \"));\n};\n\nconst CustBlock = props => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, props.user.id), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, props.user.firstName), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, props.user.lastName));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/rk/WebstormProjects/weatherapp/weatherapp/src/App.js"],"names":["React","Component","ReactDom","App","constructor","props","state","street","city","lat","long","states","currState","currLoc","users","loadingcustomers","customers","updateStreet","bind","updateCity","updateStates","updateCurrloc","updateClear","submitform","updatelatlong","submitPostlatlong","e","preventDefault","setState","target","value","type","checked","name","componentDidMount","fetch","then","res","json","data","catch","console","log","uri","render","testStyle","rendercustomer","map","st","id","user","cust","TableRow","email","address","suit","zipcode","CustBlock","firstName","lastName"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport ReactDom from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nexport class App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      street:'Shoup Ave',\n      city:'Los Angeles',\n      lat:'',\n      long:'',\n      states:['Alabama','Alaska','American Samoa','Arizona','Arkansas',\n      'California','Colorado','Connecticut','Delaware','District of Columbia',\n      'Federated States of Micronesia','Florida','Georgia','Guam','Hawaii',\n      'Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine',\n      'Marshall Islands','Maryland','Massachusetts','Michigan','Minnesota',\n      'Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire',\n      'New Jersey','New Mexico','New York','North Carolina','North Dakota',\n      'Northern Mariana Islands','Ohio','Oklahoma','Oregon','Palau','Pennsylvania',\n      'Puerto Rico','Rhode Island','South Carolina','South Dakota','Tennessee','Texas',\n      'Utah','Vermont','Virgin Island','Virginia','Washington','West Virginia','Wisconsin',\n      'Wyoming'],\n      currState : 'Select',\n      currLoc: false,\n      users:[],\n      loadingcustomers: true,\n      customers : []\n    }\n    this.updateStreet = this.updateStreet.bind(this);\n    this.updateCity = this.updateCity.bind(this);\n    this.updateStates = this.updateStates.bind(this);\n    this.updateCurrloc = this.updateCurrloc.bind(this);\n    this.updateClear = this.updateClear.bind(this);\n    this.submitform = this.submitform.bind(this);\n    this.updatelatlong = this.updatelatlong.bind(this);\n    this.submitPostlatlong = this.submitPostlatlong.bind(this);\n  }\n\n  updateStreet(e){\n    e.preventDefault();\n    this.setState({street:e.target.value});\n  }\n  updateCity(e){\n    e.preventDefault();\n    this.setState({city:e.target.value});\n  }\n  updateStates(e){\n    e.preventDefault();\n    this.setState({currState:e.target.value});\n  }\n  updateCurrloc(e){\n    e.preventDefault();\n    this.setState({currLoc:!this.state.currLoc});\n  }\n  updateClear(e){\n    e.preventDefault();\n    this.setState({\n      street:'Shoup Ave',\n      city:'Los Angeles',\n      currState : 'Select',\n      currLoc: false,\n  })\n  }\n  updatelatlong(e){\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState ({\n      [name] : value,\n    })\n  }\n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n      .then(res=>res.json())\n      .then((data)=>{\n        this.setState({users:data})\n      })\n      .catch(console.log)\n  }\n  submitform(e){\n    e.preventDefault();\n    fetch('http://localhost:5000/api/customers')\n      .then(res=>res.json())\n      .then((data)=>{\n        this.setState({\n          customers:data, \n          loadingcustomers:false\n        })\n        console.log(data);\n      })\n  }\n  submitPostlatlong(e){\n    e.preventDefault();\n    const uri = `http://localhost:5000/weather/lat/${this.state.lat}/long/${this.state.long}`\n    fetch(uri).then(res=>res.json())\n      .then((data)=>console.log(data));\n  }\n  \n  render(){\n    let testStyle = {\n      'marginTop':'50px',\n    }\n    const rendercustomer = this.state.loadingcustomers;\n    \n    return (\n      <div className=\"App\">\n        <form className='weatherform'>\n          <h1>Weather Search</h1>\n          <div id='street' className='inputpart'>\n          <label className='inputlabel'>street</label>\n          <input onChange={this.updateStreet} value={this.state.street}></input>\n          </div>\n          <div id='city' className='inputpart'>\n          <label className='inputlabel'>city</label>\n          <input onChange={this.updateCity} value={this.state.city}></input>\n          </div>\n          <div className='inputpart'>\n          <label className='inputlabel'>state</label>\n          <select className='state-select' onChange={this.updateStates} value={this.state.currState}>\n            {this.state.states.map((st, id)=><option value={st} key={id}>{st}</option>)}\n          </select>\n          </div>\n          <div className='inputpart'>\n          <label className='current-Location'>\n          <input name='currentLocation' type='checkbox' onChange={this.state.updateCurrloc} \n          value={this.state.currLoc}>\n          </input>\n          current-Location\n          </label>\n          </div>\n\n          <div id='city' className='inputpart'>\n          <label className='inputlabel'>lat</label>\n          <input onChange={this.updatelatlong} value={this.state.lat} name='lat'></input>\n          </div><div id='city' className='inputpart'>\n          <label className='inputlabel'>long</label>\n          <input onChange={this.updatelatlong} value={this.state.long} name='long'></input>\n          </div>\n          <input type='submit' className='submitbutton' value='Submitlatlong' onClick={this.submitPostlatlong} />\n\n          <input type='submit' className='submitbutton' id='submit' value='Submit' onClick={this.submitform} />\n          <input type='submit' className='submitbutton' id ='clear' value='clear' onClick={this.updateClear}/>\n        </form>\n        <div className='userspart'>\n          <table>\n            <tbody>\n              {this.state.users.map((user, id)=><TableRow user={user} key={id}></TableRow>)}\n            </tbody>\n          </table>\n        </div>\n        <div className='userspart' id='customers'>\n        {rendercustomer ? <h3>is loading...</h3> :\n        <table>\n        <tbody>\n          {this.state.customers.map((cust, id)=><CustBlock user={cust}></CustBlock>)}\n        </tbody>\n        </table> \n        }\n        </div>\n        <div>\n          <h1 style={testStyle}>Test</h1>\n          <h5>street value is:</h5>{this.state.street}\n          <h5>city value is:</h5>{this.state.city}\n          <h5>currState value is:</h5>{this.state.currState}\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nconst TableRow = (props)=> {\n  return <tr>\n    <td>{props.user.id}</td>\n    <td>{props.user.name}</td>\n    <td>{props.user.email}</td>\n    <td>`{props.user.address.street} {props.user.address.suit} {props.user.address.city} {props.user.address.zipcode}` </td>\n  </tr>;\n}\n\nconst CustBlock = (props) => {\n  return <tr>\n    <td>{props.user.id}</td>\n    <td>{props.user.firstName}</td>\n    <td>{props.user.lastName}</td>\n  </tr>;\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}