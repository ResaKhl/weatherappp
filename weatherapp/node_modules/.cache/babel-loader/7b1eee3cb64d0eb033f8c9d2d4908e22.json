{"ast":null,"code":"var _jsxFileName = \"/home/rk/WebstormProjects/weatherapp/weatherapp/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      street: 'Shoup Ave',\n      city: 'Los Angeles',\n      states: ['Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Federated States of Micronesia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'],\n      currState: 'Select',\n      currLoc: false,\n      users: null\n    };\n    this.updateStreet = this.updateStreet.bind(this);\n    this.updateCity = this.updateCity.bind(this);\n    this.updateStates = this.updateStates.bind(this);\n    this.updateCurrloc = this.updateCurrloc.bind(this);\n    this.updateClear = this.updateClear.bind(this);\n    this.submitform = this.submitform.bind(this);\n  }\n\n  updateStreet(e) {\n    e.preventDefault();\n    this.setState({\n      street: e.target.value\n    });\n  }\n\n  updateCity(e) {\n    e.preventDefault();\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  updateStates(e) {\n    e.preventDefault();\n    this.setState({\n      currState: e.target.value\n    });\n  }\n\n  updateCurrloc(e) {\n    e.preventDefault();\n    this.setState({\n      currLoc: !this.state.currLoc\n    });\n  }\n\n  updateClear(e) {\n    e.preventDefault();\n    this.setState({\n      street: 'Shoup Ave',\n      city: 'Los Angeles',\n      currState: 'Select',\n      currLoc: false\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(res => res.json()).then(data => {\n      this.setState({\n        users: data\n      });\n    }).catch(console.log);\n  }\n\n  submitform(e) {\n    console.log('kos');\n  }\n\n  render() {\n    let testStyle = {\n      'margin-top': '50px'\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"weatherform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Weather Search\"), React.createElement(\"div\", {\n      id: \"street\",\n      className: \"inputpart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"street\"), React.createElement(\"input\", {\n      onChange: this.updateStreet,\n      value: this.state.street,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"city\",\n      className: \"inputpart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"city\"), React.createElement(\"input\", {\n      onChange: this.updateCity,\n      value: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"inputpart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"inputlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"state\"), React.createElement(\"select\", {\n      className: \"state-select\",\n      onChange: this.updateStates,\n      value: this.state.currState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.states.map(st => React.createElement(\"option\", {\n      value: st,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, st)))), React.createElement(\"div\", {\n      className: \"inputpart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"current-Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"currentLocation\",\n      type: \"checkbox\",\n      onChange: this.state.updateCurrloc,\n      value: this.state.currLoc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"current-Location\")), React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      value: \"Submit\",\n      onClick: this.submitform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"clear\",\n      value: \"clear\",\n      onClick: this.updateClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"userspart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: testStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Test\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"street value is:\"), this.state.street, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"city value is:\"), this.state.city, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"currState value is:\"), this.state.currState));\n  }\n\n} // const TableRow = (user)=> {\n//   <tr>\n//     <td>{user.id}</td>\n//     <td>{user.name}</td>\n//     <td>{user.emial}</td>\n//     <td>`{user.address.street} {user.address.suit} {user.address.city} {user.address.zipcode}` </td>\n//   </tr>\n// }\n\nexport default App;","map":{"version":3,"sources":["/home/rk/WebstormProjects/weatherapp/weatherapp/src/App.js"],"names":["React","Component","ReactDom","App","constructor","props","state","street","city","states","currState","currLoc","users","updateStreet","bind","updateCity","updateStates","updateCurrloc","updateClear","submitform","e","preventDefault","setState","target","value","componentDidMount","fetch","then","res","json","data","catch","console","log","render","testStyle","map","st"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport ReactDom from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nexport class App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      street:'Shoup Ave',\n      city:'Los Angeles',\n      states:['Alabama','Alaska','American Samoa','Arizona','Arkansas',\n      'California','Colorado','Connecticut','Delaware','District of Columbia',\n      'Federated States of Micronesia','Florida','Georgia','Guam','Hawaii',\n      'Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine',\n      'Marshall Islands','Maryland','Massachusetts','Michigan','Minnesota',\n      'Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire',\n      'New Jersey','New Mexico','New York','North Carolina','North Dakota',\n      'Northern Mariana Islands','Ohio','Oklahoma','Oregon','Palau','Pennsylvania',\n      'Puerto Rico','Rhode Island','South Carolina','South Dakota','Tennessee','Texas',\n      'Utah','Vermont','Virgin Island','Virginia','Washington','West Virginia','Wisconsin',\n      'Wyoming'],\n      currState : 'Select',\n      currLoc: false,\n      users:null,\n    }\n    this.updateStreet = this.updateStreet.bind(this);\n    this.updateCity = this.updateCity.bind(this);\n    this.updateStates = this.updateStates.bind(this);\n    this.updateCurrloc = this.updateCurrloc.bind(this);\n    this.updateClear = this.updateClear.bind(this);\n    this.submitform = this.submitform.bind(this);\n  }\n\n  updateStreet(e){\n    e.preventDefault();\n    this.setState({street:e.target.value});\n  }\n  updateCity(e){\n    e.preventDefault();\n    this.setState({city:e.target.value});\n  }\n  updateStates(e){\n    e.preventDefault();\n    this.setState({currState:e.target.value});\n  }\n  updateCurrloc(e){\n    e.preventDefault();\n    this.setState({currLoc:!this.state.currLoc});\n  }\n  updateClear(e){\n    e.preventDefault();\n    this.setState({\n      street:'Shoup Ave',\n      city:'Los Angeles',\n      currState : 'Select',\n      currLoc: false,\n  })\n  }\n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n      .then(res=>res.json())\n      .then((data)=>{\n        this.setState({users:data});\n      })\n      .catch(console.log)\n  }\n  submitform(e){\n    console.log('kos');\n  }\n  render(){\n    let testStyle = {\n      'margin-top':'50px',\n    }\n    return (\n      <div className=\"App\">\n        <form className='weatherform'>\n          <h1>Weather Search</h1>\n          <div id='street' className='inputpart'>\n          <label className='inputlabel'>street</label>\n          <input onChange={this.updateStreet} value={this.state.street}></input>\n          </div>\n          <div id='city' className='inputpart'>\n          <label className='inputlabel'>city</label>\n          <input onChange={this.updateCity} value={this.state.city}></input>\n          </div>\n          <div className='inputpart'>\n          <label className='inputlabel'>state</label>\n          <select className='state-select' onChange={this.updateStates} value={this.state.currState}>\n            {this.state.states.map(st=><option value={st}>{st}</option>)}\n          </select>\n          </div>\n          <div className='inputpart'>\n          <label className='current-Location'>\n          <input name='currentLocation' type='checkbox' onChange={this.state.updateCurrloc} \n          value={this.state.currLoc}>\n          </input>\n          current-Location\n          </label>\n          </div>\n          <input type='submit' id='submit' value='Submit' onClick={this.submitform} />\n          <input type='submit' id ='clear' value='clear' onClick={this.updateClear}/>\n        </form>\n        <div className='userspart'>\n          <table>\n            <tbody>\n              {/* {this.state.users.map(user=><TableRow user={user}></TableRow>)} */}\n            </tbody>\n          </table>\n        </div>\n        <div>\n          <h1 style={testStyle}>Test</h1>\n          <h5>street value is:</h5>{this.state.street}\n          <h5>city value is:</h5>{this.state.city}\n          <h5>currState value is:</h5>{this.state.currState}\n        </div>\n        \n      </div>\n    );\n  }\n}\n\n// const TableRow = (user)=> {\n//   <tr>\n//     <td>{user.id}</td>\n//     <td>{user.name}</td>\n//     <td>{user.emial}</td>\n//     <td>`{user.address.street} {user.address.suit} {user.address.city} {user.address.zipcode}` </td>\n//   </tr>\n// }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}